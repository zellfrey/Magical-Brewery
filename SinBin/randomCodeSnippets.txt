This is a place for code that I have commented out and have not decided whether or not i want to keep it

//CleansingCrytal.js
// world.beforeEvents.entityRemove.subscribe(async (e) => {
//     const {removedEntity} = e;
//     if(removedEntity.typeId !== "minecraft:item") return;
//     const item = removedEntity.getComponent("item").itemStack
//     if(!vanillaItems.includes(item.typeId)) return;
//     console.log(removedEntity.typeId)
    
// });
// function cleanCrystal(item, entity, block, entityCoords, blockCoords){
    
//     const dim = entity.dimension
//     const lore = item.getLore();
    
//     let cleanStage;
    
    
//     // if(!lore.includes('§7Harmonised')){
//     //     if(block.below().typeId === "minecraft:noteblock"){
            
//     //         cleanStage = '§7Harmonised';
            
//     //     }
import {world, system, ItemStack, Potions} from "@minecraft/server";

system.runInterval(
    () => {
        const players = world.getAllPlayers();
        for (let i = 0; i < players.length; i++) {
            const player = players[i];
            try {
                const { block, face } = player.getBlockFromViewDirection();
                if (!block) {
                    player.onScreenDisplay.setActionBar( "Not looking at a Block." );
                    return;
                };
                
                player.onScreenDisplay.setActionBar(
                    `§rblock: §7${block.typeId}§r, face: §7${face}§r, xyz: §6${block.location.x} §r/ §6${block.location.y} §r/ §6${block.location.z}§r,\n`
                    + `data: §7${JSON.stringify(block.permutation.getAllStates(), null, 4)}`
                );
            } catch {
                player.onScreenDisplay.setActionBar( "Not looking at a Block." );
            };
        };
    },
);